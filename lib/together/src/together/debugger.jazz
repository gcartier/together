;;;============
;;;  Together
;;;============
;;;
;;;; Together Debugger
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.debugger jazz


(import (jazz.debugger)
        (jazz.debugger.jazz)
        (world)
        (world.autoload)
        (world.context))


(class Together-Debugger extends Jazz-Debugger
  
  
  ;;;
  ;;;; Console
  ;;;
  
  
  ;; Until Together internal consoles
  
  
  (method override (register-console-text self debugged-process debugged-thread select?)
    #f)
  
  
  (method override (unregister-console-text self text)
    )
  
  
  (method override (select-console self resource)
    )
  
  
  (method override (console-output self resource str)
    (display str (terminal-port)))
  
  
  (method override (clear-console self resource)
    (clear-terminal))
  
  
  (method override (evaluating-code self thunk)
    (with-exception-catcher
      (lambda (exc)
        (let ((world (current-world)))
          (display-message world (split-string (exception-reason exc) #\newline)
            duration: 15.)))
      thunk))
  
  
  (method override (report-walk-problems self process reason detail cookie)
    (let ((world (current-world)))
      (display-message world (let ((all (split-string reason #\newline)))
                               (if (and (>= (length all) 3)
                                        (equal? (car all) "Walk problems encountered"))
                                   (subseq all 2 (length all))
                                 all))
        duration: 15.)))))
