;;;============
;;;  Together
;;;============
;;;
;;;; Together Debugger
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.debugger jazz


(import (jazz.debugger.jazz)
        (world)
        (world.context))


(class Together-Debugger extends Jazz-Debugger
  
  
  ;;;
  ;;;; Console
  ;;;
  
  
  ;; Until Together internal consoles
  
  
  (method override (register-console-text self debugged-process debugged-thread select?)
    #f)
  
  
  (method override (unregister-console-text self text)
    )
  
  
  (method override (select-console self resource)
    )
  
  
  (method override (console-output self resource str)
    (display str (terminal-port)))
  
  
  (method override (clear-console self resource)
    (clear-terminal))
  
  
  (method override (report-walk-problems self process detail cookie)
    (let ((world (current-world)))
      (display-message world "Walk problems"))
    @w
    (when (or (not cookie) (not (eqv? cookie last-reported-cookie)))
      (set! last-reported-cookie cookie)
      (let ((problems-view (get-problems-view)))
        (when problems-view
          (execute-event
            (lambda ()
              (let ((code (message-box (walk-problems-message detail)
                                       type: 'question
                                       title: "Problems"
                                       yes: "Highlight"
                                       no: "Ignore")))
                (case code
                  ((yes)
                   (report-problems problems-view detail highlight?: #t)
                   (ensure-focusable problems-view))))))))))))
