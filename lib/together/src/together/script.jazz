;;;============
;;;  Together
;;;============
;;;
;;;; Script Stage
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.script jazz


(import (jazz.application)
        (jazz.io)
        (jazz.window)
        (world)
        (world.asset)
        (world.assets)
        (world.context)
        (world.entity)
        (world.interface.script)
        (world.scripter))


;;;
;;;; Panel
;;;


(class Together-Script-Panel extends Script-Panel
  
  
  (method override (form-model self form)
    (case (get-name form)
      ((manager) Together-Script-Manager)
      (else (nextmethod self form)))))


;;;
;;;; Manager
;;;


(class Together-Script-Manager extends Script-Manager
  
  
  (method override (form-model self form)
    (case (get-name form)
      ((script) Together-Script-View)
      (else (nextmethod self form))))
  
  
  @YOWNU-get-asset-not-in-creature
  (method override (edited-update self)
    (define (present-edited edited)
      (let ((path (get-path (get-asset edited))))
        (let ((name (filename-base (last path)))
              (path (butlast path))
              (modified? (script-modified? self)))
          (format "{a}{?: *~} ~{{l detail: :human}~}" name modified? path))))
    
    (when edited
      (let ((toplevel (current-toplevel)))
        (set-caption toplevel (present-edited edited))))))


;;;
;;;; View
;;;


(class Together-Script-View extends Script-View
  
  
  (method override (form-model self form)
    (case (get-name form)
      ((text) Together-Script-Text-View)
      (else (nextmethod self form)))))


;;;
;;;; Text
;;;


(class Together-Script-Text-View extends Script-Text-View
  
  
  (method override (content-changed self range strings undo-range undo-strings)
    (if (is? edited-entity world.script.asset:Asset-Entity)
        (let ((manager (find-ascendant self Script-Manager)))
          (edited-update manager))
      (nextmethod self range strings undo-range undo-strings)))
  
  
  (method override (evaluate-selection self)
    (if (is? edited-entity world.script.asset:Asset-Entity)
        (let ((interface (current-interface))
              (world (current-world)))
          (clear-message world)
          ;; quicky for now
          (if (and edited-entity
                   (let ((asset (get-asset edited-entity)))
                     (or (is? (get-assets asset) Catalog-Assets)
                         (let ((path (get-path asset)))
                           (and (pair? path)
                                (equal? (car path) "module"))))))
              (let ((manager (find-ascendant self Script-Manager)))
                (save-script manager)
                (nextmethod self))
            (let ((panel (child interface 'script)))
              (let ((manager (locate panel 'manager)))
                (if edited-entity
                    (let ((asset (get-asset edited-entity)))
                      (save-script manager)
                      (execute-script world (asset-path asset)))
                  ;; initial quick try for unsaved scripts
                  (let ((entity (new Entity)))
                    (let ((script (new Script parent: entity text: (get-string-content self))))
                      (run-task entity script))))))))
      (nextmethod self)))))
