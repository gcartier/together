;;;============
;;;  Together
;;;============
;;;
;;;; Together Run
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.run jazz


(import (jazz.action)
        (jazz.foreign)
        (jazz.graphic.image)
        (jazz.io)
        (jazz.logger)
        (jazz.platform)
        (jazz.settings)
        (jazz.snapshot)
        (world)
        (world.build)
        (world.foreign)
        (together)
        (together.domain))


(definition (prepare-limits)
  (cond-expand
    (mac
     (set-rlimit-nofile 1024))
    (else)))


(definition (prepare-logger)
  (initialize-aliases)
  (set-logger-directory (new-directory (determine-settings-root) '("1.0.0" "work" "logs")))
  (set-logger-prefix "client"))


(definition protected (prepare-together)
  (set-window? #t)
  (set-tier-title "Together")
  (set-tier-kind 'client)
  (set-process-kind 'application)
  (set-settings-alias 'Resources)
  (set-settings-root (determine-settings-root))
  (set-documents-root (determine-documents-root))
  (set-universe-root (determine-universe-root))
  (set-options-setup setup-options)
  (set-settings-setup setup-settings)
  (set-settings-override override-settings)
  (set-aliases-setup setup-aliases)
  (set-valid-roles '(user builder developer))
  (set-server-filename (determine-server-filename))
  (set-worker-filename (determine-worker-filename))
  (set-action-item-visibility #f)
  (set-translucent-players? #t)
  (snapshot-prefix "Together")
  (register-domain-names)
  (register-kernel-properties)
  (register-platform-properties)
  (setup-presence))


(definition (register-kernel-properties)
  (add-snapshot-property 'kernel.platform kernel-platform)
  (add-snapshot-property 'kernel.features kernel-features)
  (add-snapshot-property 'kernel.properties kernel-properties))


(definition (register-platform-properties)
  (add-snapshot-property 'platform.version (present (get-platform-version))))


(definition protected (prepare-settings)
  (load-unit 'world.settings)
  (when start-tier-listener
    (start-tier-listener))
  (when connect-slave-to-master
    (connect-slave-to-master)))


(definition (setup-options settings)
  (for-each-property (lambda (property value)
                       (set-setting settings property value))
                     '(;; render
                       world.view-distance         7
                       world.multisampling?        #t
                       world.multisampling         2
                       world.render-rate           #f
                       world.render-rate-inactive  #f
                       ;; media
                       world.video-layout          circle)))


(definition (setup-settings settings)
  (for-each-property (lambda (property value)
                       (set-setting settings property value))
                     '(;; configure
                       world.start-time            9000
                       ;; render
                       world.tick-rate-inactive    .75
                       world.message-rate-inactive 5.
                       ;; support
                       world.block-pumps?          #t
                       ;; test
                       world.init-script           #f
                       world.test-script           #f
                       world.test1-script          #f
                       world.test2-script          #f
                       world.test3-script          #f
                       world.test4-script          #f
                       world.test5-script          #f
                       world.test6-script          #f
                       world.test7-script          #f
                       world.test8-script          #f
                       world.test9-script          #f
                       world.test0-script          #f)))


(definition (override-settings settings)
  (for-each-property (lambda (property value)
                       (set-setting settings property value))
                     '(;; interface
                       world.show-belt?            #f
                       ;; audio
                       world.music?                #f
                       world.ambience?             #f)))


(definition (create-documents)
  (create-directories {Directory Documents "assets"})
  (create-directories {Directory Documents "assets" "model"})
  (create-directories {Directory Documents "assets" "painting"})
  @wait-till-there-is-a-user-way-to-share-documents
  (create-directories {Directory Documents "shared"})
  (create-directories {Directory Documents "streams"}))


(definition (install-writable?)
  (if (cond-expand
        (mac (directory-writable? kernel-bundle-install))
        (else #t))
      #t
    (system-message (format "Please drag & drop Together on the Applications icon")
                    type: 'problem
                    title: "Together")
    #f))


(definition (already-running?)
  (if (cond-expand
        ((or devel stable) #f)
        (else (process-already-running?)))
      (begin
        (system-message (string-append "Together is already running")
                        type: 'message
                        title: "Together")
        (load-feedback-done)
        #t)
    #f))


(definition protected (load-together)
  (prepare-limits)
  (prepare-logger)
  (prepare-together)
  (prepare-settings)
  (setup-build-metadata ".together")
  (load-unit 'world.profiling)
  (create-documents)
  (load-unit 'world.work)
  (load-unit 'together.boot)
  (load-unit 'together.load))


(definition protected (boot-together)
  (boot-process))


(definition protected (run-together)
  (when (install-writable?)
    (unless (already-running?)
      (load-together)
      (boot-together)))))
