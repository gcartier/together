;;;============
;;;  Together
;;;============
;;;
;;;; Together Run
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.run jazz


(import (jazz.io)
        (world)
        (together))


(definition protected (prepare-together)
  (set-together? #t)
  (set-window? #t)
  (set-tier-title "Together")
  (set-tier-kind 'client)
  (set-process-kind 'application)
  (set-settings-root {Directory Home ".together"})
  (set-settings-alias 'Resources)
  (set-settings-override override-settings)
  (set-aliases-setup setup-aliases)
  (set-valid-roles '(user creator designer programmer admin))
  (set-default-server "Together")
  (set-server-filename (determine-server-filename))
  (set-worker-filename (determine-worker-filename)))


(definition protected (prepare-settings)
  (load-unit 'world.settings)
  (when start-tier-listener
    (start-tier-listener))
  (when connect-slave-to-master
    (connect-slave-to-master)))


(definition (override-settings settings)
  (for-each-property (lambda (property value)
                       (set-setting settings property value))
                     '(;; role
                       world.role             programmer ; user
                       ;; welcome
                       world.welcome-skybox   "nebula"
                       ;; interface
                       world.show-belt?       #f
                       ;; media
                       world.video-layout     gallery
                       ;; audio
                       world.music?           #f
                       world.ambience?        #f
                       world.sounds?          #f
                       ;; video
                       world.sun-cycle?       #f
                       world.start-time       day
                       ;; generation
                       world.tile-pack        "minecraft"
                       world.tile-resolution  16
                       world.generate-mipmap? #t
                       world.min-filter       linear
                       world.mag-filter       nearest
                       ;; worker
                       world.worker?          #f)))


(definition (run-together descriptor)
  (prepare-together)
  (prepare-settings)
  (load-unit 'world.work)
  (load-unit 'together.boot)
  (boot-process))


(register-product-run 'together
  run-together))
