;;;============
;;;  Together
;;;============
;;;
;;;; Product Base
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.product-base jazz


(import (jazz.io)
        (jazz.time))


;; not using libgit2 to not have a compilation
;; dependency inside the build system and also
;; because it has yet to be ported to linux
(definition (repository-digest dir)
  ;; use some random uuid until ported to jas
  "3878BC9C-1F52-4347-8FEC-E51CD343484D"
  @port-to-jas
  (let ((port
          (open-process
            (list
              path: "git"
              arguments: `("rev-parse" "HEAD")
              directory: (parse dir)))))
    (let ((status (process-status port)))
      (assert (= status 0)
        (read-line port)))))


(definition protected (source-digests)
  (values (repository-digest {Directory Together})
          (repository-digest {Directory Together "world"})
          (repository-digest {Directory Together "jiri"})
          (repository-digest {Directory Together "gaea"})
          (repository-digest {Directory Together "jazz"})))


(definition protected (generate-build-metadata filename)
  (let ((file (new-file {Directory Build} filename)))
    (call-with-output-file (path-settings file)
      (lambda (output)
        (format output "date: {s}{%}" (system-date))
        (format output "sources: (")
        (receive (together world jiri gaea jazz) (source-digests)
          (format output "(together . {s}){%}" together)
          (format output "          (world . {s}){%}" world)
          (format output "          (jiri . {s}){%}" jiri)
          (format output "          (gaea . {s}){%}" gaea)
          (format output "          (jazz . {s})){%}" jazz)))))))
