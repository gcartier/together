;;;============
;;;  Together
;;;============
;;;
;;;; Together Space
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module together.space jazz


(import (jazz.component)
        (jazz.geometry)
        (jazz.view)
        (world)
        (world.context)
        (world.interface.mainbar)
        (world.pane)
        (world.space)
        (world.window))


(class Together-Space extends Space
  
  
  (slot root initialize #f getter generate)
  
  
  (method protected virtual (enter-press self)
    )
  
  
  (method protected virtual (tab-press self)
    )
  
  
  (method protected virtual (escape-press self)
    #f)
    
  
  (method protected virtual (name-return self)
    )
  
  
  (method protected virtual (name-escape self)
    )
  
  
  (method protected virtual (draw-message-offset self)
    #f)
  
  
  (method protected virtual (draw-working-offset self)
    #f)
  
  
  ;;;
  ;;;; Mainbar
  ;;;
  
  
  (method (show-mainbar self)
    (let ((window (current-window)))
      (set-visible? mainbar #t)
      (set-visible? mainbar-sheet #t)
      (register-front-sheet window mainbar-sheet)
      (if (fade-mainbar? self)
          (fade-mainbar (point->point$fl$ (mouse-position window)) #t)
        (set-fade mainbar-pane #f)
        (invalidate-view mainbar))))
  
  
  (method (hide-mainbar self)
    (let ((window (current-window)))
      (set-fade mainbar-pane 0.)
      (invalidate-view mainbar)
      (set-visible? mainbar #f)
      (set-visible? mainbar-sheet #f)
      (unregister-sheet window mainbar-sheet)))))
